name: Brew Test & Build
on:
  push:
    branches:
      - main
    paths:
      - '**.rb'
  pull_request:
    branches:
      - main
    paths:
      - '**.rb'
    types:
      - opened
      - ready_for_review
      - synchronize
      - reopened

env:
  HOMEBREW_NO_INSTALL_FROM_API: 1

jobs:
  test-bot:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-11, macos-10.15 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Cache Homebrew Bundler RubyGems
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ runner.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ runner.os }}-rubygems-

      - name: Install Homebrew Bundler RubyGems
        if: steps.cache.outputs.cache-hit != 'true'
        run: brew install-bundler-gems
      - run: brew test-bot --only-cleanup-before
      - run: brew test-bot --only-setup
      - run: brew test-bot --only-tap-syntax
      - run: brew test-bot --only-formulae
        if: github.event_name == 'pull_request'

      - name: Upload bottles as artifact
        if: always() && github.event_name == 'pull_request'
        uses: actions/upload-artifact@main
        with:
          name: bottles
          path: '*.bottle.*'
  label-pr:
    needs:
      - test-bot
    runs-on: ubuntu-22.04
    name: Label the PR
    permissions:
      pull-requests: write
    steps:
      - uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: pr-pull
          github_token: ${{ secrets.Release_PAT }}
